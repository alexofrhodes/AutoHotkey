Sub MoveCommentsToOwnLineProcedure(Optional Procedure As String, Optional TargetWorkbook As Workbook)
    If TargetWorkbook Is Nothing Then Set TargetWorkbook = ActiveCodepaneWorkbook
    Dim Module As VBComponent
    If Procedure = "" Then
        Set Module = ActiveModule
        Procedure = ActiveProcedure
    Else
        Set Module = moduleOfProcedure(TargetWorkbook, Procedure)
    End If
    UpdateProcedureCode Procedure, CommentsToOwnLine(GetCodeOf(Procedure, TargetWorkbook)), TargetWorkbook
End Sub

Sub MoveCommentsToOwnLineModule(Optional Module As VBComponent)
    If Module Is Nothing Then Set Module = ActiveModule
    Dim newCode As String
    newCode = CommentsToOwnLine(GetCodeOf(Module))
    With Module.CodeModule
        .DeleteLines 1, .CountOfLines
        .InsertLines 1, newCode
    End With
End Sub

Function CommentsToOwnLine(str As Variant) As String

    Dim var As Variant
    ReDim var(1)
    If TypeName(str) = "String" Then str = Split(str, vbNewLine)
    
    Dim Module As VBComponent
    Set Module = ActiveModule
    Dim n               As Long
    Dim i               As Long
    Dim j               As Long
    Dim k               As Long
    Dim l               As Long
    Dim LineText        As String
    Dim QUOTES          As Long
    Dim Q               As Long
    Dim StartPos        As Long
    
    With Module.CodeModule
        For j = LBound(str) To UBound(str)
            LineText = Trim(str(j))
            StartPos = 1
retry:
            n = InStr(StartPos, LineText, "'")
            Q = InStr(StartPos, LineText, """")
            QUOTES = 0
            If Q < n Then
                For l = 1 To n
                    If Mid(LineText, l, 1) = """" Then
                        QUOTES = QUOTES + 1
                    End If
                Next l
            End If
            If QUOTES = Application.WorksheetFunction.Odd(QUOTES) Then
                StartPos = n + 1
                GoTo retry:
            Else
                Select Case n
                    Case Is = 0, 1
                        var(UBound(var)) = str(j)
                        ReDim Preserve var(UBound(var) + 1)
                    Case Is > 1
                        var(UBound(var)) = Space(Len(str(j)) - Len(LTrim(str(j)))) & Mid(LineText, n)
                        ReDim Preserve var(UBound(var) + 1)
                        var(UBound(var)) = Space(Len(str(j)) - Len(LTrim(str(j)))) & left(LineText, n - 1)
                        ReDim Preserve var(UBound(var) + 1)
                End Select
            End If
        Next j
    End With
    CommentsToOwnLine = Join(var, vbLf)
End Function


Sub TestCommentsToOwnLine()
'0. comment in separate line
    '1. comment in separate line
    If something Then '2. comment in line
        DoEvents '3. comment in line
    End If
'4. comment in separate line
End Sub



